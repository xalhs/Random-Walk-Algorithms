import random
import math

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import animation

tmax = 875   #maximum number of steps
t = 0        #number of steps

x = [0]
y = [0]

dist = 0     #distance

while t < tmax:
    coord = random.randint(0,1)

    if coord == 0:  #moves in y direction
        direction = random.randint(0,1)
        direction = 2*direction -1
        x.append(x[t] + direction)
        y.append(y[t])
    else:          #moves in x direction
        direction = random.randint(0,1)
        direction = 2*direction -1
        y.append(y[t] + direction)
        x.append(x[t])
    cur_dist = x[t]*x[t]+y[t]*y[t]
    if cur_dist > dist:
        dist = cur_dist

    t=t+1

print("max distance was " + str(math.sqrt(dist)))

fig = plt.figure(figsize=(10, 10))
ax = plt.subplot(111)

xdata, ydata = [], []
ln, = plt.plot([], [])

points = np.c_[x, y]

def init():
    ax.set_xticklabels([])
    ax.set_yticklabels([])
    #ax.grid()
    ax.spines['top'].set_visible(False)
    ax.spines['right'].set_visible(False)
    ax.spines['left'].set_visible(False)
    ax.spines['bottom'].set_visible(False)
    ax.set_aspect('equal')
    plt.tick_params(length=0)
    return ln,

def update(points):
    xdata.append(points[0])
    ydata.append(points[1])
    ln.set_data(xdata, ydata)
    ax.set_xticks(range(len(xdata)))
    ax.set_yticks(range(len(ydata)))
    ax.set_xlim([min(xdata+ydata)-1, max(xdata + ydata)+1])
    ax.set_ylim([min(xdata+ydata)-1, max(*xdata, *ydata)+1])
    #ax.grid(b=True, which='both', linewidth=1, c='b', linestyle='-')
    return ln,

input("waiting for input")
ani = animation.FuncAnimation(fig, update, frames=points,
                             init_func=init, blit=True, repeat=False, interval=1)

plt.show()
